   Compiling serde_s2 v0.1.0 (file:///home/sell/dev/sc2replay/serde_s2)
     Running target/debug/serde_s2-d5ed95223726720c

running 5 tests
test common::color::tests::test_versioned ... ok
test common::color::tests::test_versioned_json ... ok
test tests::header::json_deserialize ... ok
test tests::details::protocol15405::json_deserialize ... FAILED
test tests::details::protocol15405_II::json_deserialize ... FAILED

failures:

---- tests::details::protocol15405::json_deserialize stdout ----
	deserializer found a type id of 5 at offset 0
visiting struct of length 14
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_playerList"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Optional { typeid: 21 } (will visit this type)
deserializer found a type id of 4 at offset 3
deserializer found a type id of 0 at offset 5
visiting array of length 8
array data = [5, 18, 0, 2, 10, 110, 97, 114, 111, 100, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 200, 163, 104, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 232, 2, 4, 9, 40, 6, 9, 60, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 8, 97, 114, 107, 120, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 134, 196, 86, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 0, 4, 9, 132, 1, 6, 9, 254, 3, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 6, 109, 105, 110, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 224, 166, 47, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 56, 4, 9, 206, 2, 6, 9, 212, 3, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 12, 108, 105, 101, 107, 107, 105, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 204, 224, 32, 4, 2, 12, 84, 101, 114, 114, 97, 110, 6, 5, 8, 0, 9, 254, 3, 2, 9, 168, 1, 4, 9, 0, 6, 9, 130, 2, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 6, 82, 101, 118, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 158, 144, 28, 4, 2, 12, 84, 101, 114, 114, 97, 110, 6, 5, 8, 0, 9, 254, 3, 2, 9, 214, 3, 4, 9, 194, 3, 6, 9, 82, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 14, 69, 109, 98, 101, 103, 101, 101, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 244, 203, 29, 4, 2, 8, 90, 101, 114, 103, 6, 5, 8, 0, 9, 254, 3, 2, 9, 252, 3, 4, 9, 148, 2, 6, 9, 28, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 16, 66, 114, 117, 116, 97, 110, 105, 99, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 202, 216, 32, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 44, 4, 9, 128, 2, 6, 9, 0, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 20, 66, 108, 105, 116, 122, 107, 114, 105, 101, 103, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 180, 198, 45, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 152, 3, 4, 9, 204, 2, 6, 9, 248, 3, 8, 9, 0, 10, 9, 0, 12, 9, 0, 14, 9, 0, 16, 9, 4, 2, 2, 22, 84, 111, 120, 105, 99, 32, 83, 108, 117, 109, 115, 4, 2, 0, 6, 5, 2, 0, 2, 22, 77, 105, 110, 105, 109, 97, 112, 46, 116, 103, 97, 8, 6, 1, 10, 9, 170, 212, 191, 196, 144, 195, 155, 203, 3, 12, 9, 176, 180, 169, 153, 181, 201, 155, 203, 3, 14, 2, 0, 16, 2, 0, 18, 2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
ArrayVisitor will visit types of : Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 7
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 10
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 18
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 21
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 24
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 30
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 33
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 38
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 48
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 51
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 55
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 59
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 62
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 65
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 68
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 71
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 75
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 78
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 80
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 83
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 90
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 93
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 96
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 102
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 105
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 110
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 120
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 123
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 127
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 130
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 134
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 138
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 141
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 144
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 148
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 151
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 153
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 156
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 162
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 165
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 168
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 174
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 177
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 182
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 192
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 195
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 199
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 202
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 206
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 210
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 213
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 216
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 220
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 223
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 225
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 228
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 237
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 240
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 243
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 249
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 252
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 257
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 266
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 269
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 273
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 277
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 280
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 284
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 287
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 290
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 294
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 297
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 299
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 302
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 308
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 311
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 314
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 320
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 323
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 328
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 337
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 340
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 344
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 348
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 352
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 355
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 358
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 361
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 365
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 368
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 370
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 373
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 383
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 386
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 389
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 395
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 398
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 403
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 410
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 413
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 417
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 421
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 425
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 428
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 431
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 434
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 438
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 441
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 443
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 446
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 457
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 460
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 463
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 469
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 472
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 477
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 487
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 490
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 494
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 497
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 501
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 504
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 507
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 510
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 514
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 517
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 519
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 522
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 535
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 538
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 541
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 547
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 550
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 555
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 565
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 568
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 572
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 576
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 580
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 584
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 587
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 590
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 593
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 596
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor ended; popping
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_title"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 10 } } (will visit this type)
deserializer found a type id of 2 at offset 599
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_difficulty"
difficulty found: buffer[self.offset..] = [2, 0, 6, 5, 2, 0, 2, 22, 77, 105, 110, 105, 109, 97, 112, 46, 116, 103, 97, 8, 6, 1, 10, 9, 170, 212, 191, 196, 144, 195, 155, 203, 3, 12, 9, 176, 180, 169, 153, 181, 201, 155, 203, 3, 14, 2, 0, 16, 2, 0, 18, 2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 613
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_thumbnail"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Struct(Struct { fields: [("m_file", 24, 0)] }) (will visit this type)
deserializer found a type id of 5 at offset 616
visiting struct of length 1
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
VISIT KEY NAME "m_file"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 619
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_isBlizzardMap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Bool (will visit this type)
deserializer found a type id of 6 at offset 633
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_timeUTC"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: -9223372036854775808, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 636
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_timeLocalOffset"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: -9223372036854775808, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 647
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_description"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 12 } } (will visit this type)
deserializer found a type id of 2 at offset 658
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_imageFilePath"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 661
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_mapFileName"
mapFileName found: buffer[self.offset..] = [2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 664
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_cacheHandles"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Optional { typeid: 30 } (will visit this type)
deserializer found a type id of 4 at offset 667
deserializer found a type id of 0 at offset 669
visiting array of length 5
array data = [2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
ArrayVisitor will visit types of : Blob { len: IntBounds { min: 40, bitlen: 0 } }
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 671
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 713
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 755
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 797
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 839
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor ended; popping
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_miniSave"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Bool (will visit this type)
deserializer found a type id of 6 at offset 882
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_gameSpeed"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 3 } } (will visit this type)
deserializer found a type id of 9 at offset 885
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_defaultDifficulty"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 6 } } (will visit this type)
deserializer found a type id of 9 at offset 888
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
StructVisitor ended
thread 'tests::details::protocol15405::json_deserialize' panicked at 'stuff = {"m_cacheHandles":["[115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251]","[115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14]","[115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250]","[115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133]","[115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218]"],"m_defaultDifficulty":2,"m_description":"","m_difficulty":"","m_gameSpeed":4,"m_imageFilePath":"","m_isBlizzardMap":true,"m_mapFileName":"","m_miniSave":false,"m_playerList":[{"m_color":{"m_a":255,"m_b":30,"m_g":20,"m_r":180},"m_control":2,"m_handicap":100,"m_name":"narod","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":854244,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":255,"m_g":66,"m_r":0},"m_control":2,"m_handicap":100,"m_name":"arkx","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":708867,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":234,"m_g":167,"m_r":28},"m_control":2,"m_handicap":100,"m_name":"min","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":387504,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":129,"m_g":0,"m_r":84},"m_control":2,"m_handicap":100,"m_name":"liekki","m_observe":0,"m_race":"Terran","m_result":1,"m_teamId":1,"m_toon":{"m_id":268326,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":41,"m_g":225,"m_r":235},"m_control":2,"m_handicap":100,"m_name":"Rev","m_observe":0,"m_race":"Terran","m_result":2,"m_teamId":1,"m_toon":{"m_id":230415,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":14,"m_g":138,"m_r":254},"m_control":2,"m_handicap":100,"m_name":"Embegee","m_observe":0,"m_race":"Zerg","m_result":2,"m_teamId":1,"m_toon":{"m_id":242426,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":0,"m_g":128,"m_r":22},"m_control":2,"m_handicap":100,"m_name":"Brutanic","m_observe":0,"m_race":"Protoss","m_result":2,"m_teamId":1,"m_toon":{"m_id":267813,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":252,"m_g":166,"m_r":204},"m_control":0,"m_handicap":0,"m_name":"Blitzkrieg","m_observe":0,"m_race":"Protoss","m_result":2,"m_teamId":0,"m_toon":{"m_id":373146,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}}],"m_thumbnail":{"m_file":"Minimap.tga"},"m_timeLocalOffset":129257649208634648,"m_timeUTC":129257541208634645,"m_title":"Toxic Slums"}', src/tests/details.rs:14

---- tests::details::protocol15405_II::json_deserialize stdout ----
	deserializer found a type id of 5 at offset 0
visiting struct of length 14
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_playerList"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Optional { typeid: 21 } (will visit this type)
deserializer found a type id of 4 at offset 3
deserializer found a type id of 0 at offset 5
visiting array of length 8
array data = [5, 18, 0, 2, 10, 110, 97, 114, 111, 100, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 200, 163, 104, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 232, 2, 4, 9, 40, 6, 9, 60, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 8, 97, 114, 107, 120, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 134, 196, 86, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 0, 4, 9, 132, 1, 6, 9, 254, 3, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 6, 109, 105, 110, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 224, 166, 47, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 56, 4, 9, 206, 2, 6, 9, 212, 3, 8, 9, 4, 10, 9, 0, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 12, 108, 105, 101, 107, 107, 105, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 204, 224, 32, 4, 2, 12, 84, 101, 114, 114, 97, 110, 6, 5, 8, 0, 9, 254, 3, 2, 9, 168, 1, 4, 9, 0, 6, 9, 130, 2, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 2, 5, 18, 0, 2, 6, 82, 101, 118, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 158, 144, 28, 4, 2, 12, 84, 101, 114, 114, 97, 110, 6, 5, 8, 0, 9, 254, 3, 2, 9, 214, 3, 4, 9, 194, 3, 6, 9, 82, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 14, 69, 109, 98, 101, 103, 101, 101, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 244, 203, 29, 4, 2, 8, 90, 101, 114, 103, 6, 5, 8, 0, 9, 254, 3, 2, 9, 252, 3, 4, 9, 148, 2, 6, 9, 28, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 16, 66, 114, 117, 116, 97, 110, 105, 99, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 202, 216, 32, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 44, 4, 9, 128, 2, 6, 9, 0, 8, 9, 4, 10, 9, 2, 12, 9, 200, 1, 14, 9, 0, 16, 9, 4, 5, 18, 0, 2, 20, 66, 108, 105, 116, 122, 107, 114, 105, 101, 103, 2, 5, 8, 0, 9, 4, 2, 7, 0, 0, 83, 50, 4, 9, 2, 8, 9, 180, 198, 45, 4, 2, 14, 80, 114, 111, 116, 111, 115, 115, 6, 5, 8, 0, 9, 254, 3, 2, 9, 152, 3, 4, 9, 204, 2, 6, 9, 248, 3, 8, 9, 0, 10, 9, 0, 12, 9, 0, 14, 9, 0, 16, 9, 4, 2, 2, 22, 84, 111, 120, 105, 99, 32, 83, 108, 117, 109, 115, 4, 2, 0, 6, 5, 2, 0, 2, 22, 77, 105, 110, 105, 109, 97, 112, 46, 116, 103, 97, 8, 6, 1, 10, 9, 170, 212, 191, 196, 144, 195, 155, 203, 3, 12, 9, 176, 180, 169, 153, 181, 201, 155, 203, 3, 14, 2, 0, 16, 2, 0, 18, 2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
ArrayVisitor will visit types of : Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 7
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 10
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 18
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 21
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 24
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 30
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 33
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 38
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 48
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 51
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 55
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 59
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 62
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 65
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 68
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 71
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 75
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 78
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 80
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 83
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 90
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 93
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 96
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 102
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 105
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 110
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 120
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 123
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 127
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 130
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 134
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 138
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 141
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 144
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 148
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 151
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 153
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 156
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 162
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 165
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 168
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 174
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 177
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 182
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 192
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 195
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 199
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 202
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 206
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 210
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 213
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 216
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 220
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 223
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 225
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 228
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 237
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 240
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 243
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 249
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 252
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 257
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 266
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 269
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 273
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 277
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 280
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 284
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 287
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 290
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 294
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 297
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 299
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 302
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 308
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 311
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 314
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 320
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 323
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 328
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 337
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 340
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 344
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 348
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 352
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 355
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 358
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 361
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 365
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 368
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 370
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 373
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 383
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 386
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 389
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 395
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 398
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 403
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 410
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 413
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 417
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 421
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 425
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 428
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 431
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 434
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 438
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 441
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 443
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 446
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 457
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 460
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 463
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 469
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 472
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 477
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 487
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 490
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 494
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 497
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 501
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 504
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 507
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 510
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 514
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 517
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor type Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
deserializer found a type id of 5 at offset 519
visiting struct of length 9
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_name"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 522
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_toon"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] }) (will visit this type)
deserializer found a type id of 5 at offset 535
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_region"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 538
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_programId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << FourCC (will visit this type)
deserializer found a type id of 7 at offset 541
new fourcc = "[0, 0, 83, 50]"
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_realm"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 32 } } (will visit this type)
deserializer found a type id of 9 at offset 547
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
VISIT KEY NAME "m_id"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 550
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_region", 10, 0), ("m_programId", 14, 1), ("m_realm", 5, 2), ("m_name", 15, 3), ("m_id", 16, 4)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_race"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 555
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_color"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] }) (will visit this type)
deserializer found a type id of 5 at offset 565
visiting struct of length 4
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_a"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 568
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_r"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 572
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_g"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 576
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
VISIT KEY NAME "m_b"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 580
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }), Struct(Struct { fields: [("m_a", 10, 0), ("m_r", 10, 1), ("m_g", 10, 2), ("m_b", 10, 3)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_control"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 9 at offset 584
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_teamId"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 4 } } (will visit this type)
deserializer found a type id of 9 at offset 587
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_handicap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 7 } } (will visit this type)
deserializer found a type id of 9 at offset 590
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_observe"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 593
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
VISIT KEY NAME "m_result"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 2 } } (will visit this type)
deserializer found a type id of 9 at offset 596
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 21 }, Array { bounds: IntBounds { min: 0, bitlen: 5 }, typeid: 20 }, Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] })]
StructVisitor ended
ArrayVisitor visited a type of Struct(Struct { fields: [("m_name", 9, 0), ("m_toon", 17, 1), ("m_race", 9, 2), ("m_color", 18, 3), ("m_control", 10, 4), ("m_teamId", 1, 5), ("m_handicap", 0, 6), ("m_observe", 19, 7), ("m_result", 19, 8)] }) successfully => true
ArrayVisitor ended; popping
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_title"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 10 } } (will visit this type)
deserializer found a type id of 2 at offset 599
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_difficulty"
difficulty found: buffer[self.offset..] = [2, 0, 6, 5, 2, 0, 2, 22, 77, 105, 110, 105, 109, 97, 112, 46, 116, 103, 97, 8, 6, 1, 10, 9, 170, 212, 191, 196, 144, 195, 155, 203, 3, 12, 9, 176, 180, 169, 153, 181, 201, 155, 203, 3, 14, 2, 0, 16, 2, 0, 18, 2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 8 } } (will visit this type)
deserializer found a type id of 2 at offset 613
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_thumbnail"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Struct(Struct { fields: [("m_file", 24, 0)] }) (will visit this type)
deserializer found a type id of 5 at offset 616
visiting struct of length 1
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
VISIT KEY NAME "m_file"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 619
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Struct(Struct { fields: [("m_file", 24, 0)] })]
StructVisitor ended
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_isBlizzardMap"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Bool (will visit this type)
deserializer found a type id of 6 at offset 633
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_timeUTC"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: -9223372036854775808, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 636
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_timeLocalOffset"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: -9223372036854775808, bitlen: 64 } } (will visit this type)
deserializer found a type id of 9 at offset 647
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_description"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 12 } } (will visit this type)
deserializer found a type id of 2 at offset 658
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_imageFilePath"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 661
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_mapFileName"
mapFileName found: buffer[self.offset..] = [2, 0, 20, 4, 1, 0, 10, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Blob { len: IntBounds { min: 0, bitlen: 11 } } (will visit this type)
deserializer found a type id of 2 at offset 664
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_cacheHandles"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Optional { typeid: 30 } (will visit this type)
deserializer found a type id of 4 at offset 667
deserializer found a type id of 0 at offset 669
visiting array of length 5
array data = [2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133, 2, 80, 115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218, 22, 6, 0, 24, 9, 8, 26, 9, 4]
ArrayVisitor will visit types of : Blob { len: IntBounds { min: 40, bitlen: 0 } }
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 671
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 713
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 755
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 797
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor type Blob { len: IntBounds { min: 40, bitlen: 0 } } $$$$$$$$$ IN $$$$$$$$$ [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] }), Optional { typeid: 30 }, Array { bounds: IntBounds { min: 0, bitlen: 4 }, typeid: 29 }, Blob { len: IntBounds { min: 40, bitlen: 0 } }]
deserializer found a type id of 2 at offset 839
ArrayVisitor visited a type of Blob { len: IntBounds { min: 40, bitlen: 0 } } successfully => true
ArrayVisitor ended; popping
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_miniSave"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Bool (will visit this type)
deserializer found a type id of 6 at offset 882
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_gameSpeed"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 3 } } (will visit this type)
deserializer found a type id of 9 at offset 885
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
VISIT KEY NAME "m_defaultDifficulty"
visit_value; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
visit_value; stack << Int { bounds: IntBounds { min: 0, bitlen: 6 } } (will visit this type)
deserializer found a type id of 9 at offset 888
visit_key; current_stack = [Struct(Struct { fields: [("m_playerList", 22, 0), ("m_title", 23, 1), ("m_difficulty", 9, 2), ("m_thumbnail", 25, 3), ("m_isBlizzardMap", 26, 4), ("m_timeUTC", 27, 5), ("m_timeLocalOffset", 27, 6), ("m_description", 28, 7), ("m_imageFilePath", 24, 8), ("m_mapFileName", 24, 9), ("m_cacheHandles", 31, 10), ("m_miniSave", 26, 11), ("m_gameSpeed", 12, 12), ("m_defaultDifficulty", 2, 13)] })]
StructVisitor ended
thread 'tests::details::protocol15405_II::json_deserialize' panicked at 'stuff = {"m_cacheHandles":["[115, 50, 109, 97, 0, 0, 69, 85, 109, 228, 21, 3, 186, 204, 208, 86, 86, 54, 11, 111, 2, 125, 184, 129, 105, 250, 25, 137, 187, 99, 87, 177, 178, 21, 162, 84, 121, 57, 245, 251]","[115, 50, 109, 97, 0, 0, 69, 85, 66, 28, 138, 160, 243, 97, 155, 101, 45, 35, 162, 115, 93, 254, 232, 18, 171, 100, 66, 40, 35, 94, 122, 121, 126, 222, 207, 232, 182, 125, 163, 14]","[115, 50, 109, 97, 0, 0, 69, 85, 92, 103, 62, 108, 210, 241, 191, 110, 6, 143, 165, 158, 47, 148, 33, 245, 222, 187, 145, 203, 81, 106, 202, 50, 55, 211, 176, 95, 231, 199, 233, 250]","[115, 50, 109, 97, 0, 0, 69, 85, 38, 177, 178, 118, 71, 148, 122, 15, 5, 255, 233, 166, 79, 8, 155, 72, 122, 5, 45, 233, 133, 161, 115, 16, 190, 162, 4, 24, 50, 163, 221, 133]","[115, 50, 109, 97, 0, 0, 69, 85, 247, 32, 80, 10, 35, 6, 243, 99, 48, 152, 13, 149, 30, 192, 22, 234, 236, 108, 51, 240, 231, 215, 129, 99, 35, 243, 225, 177, 17, 189, 224, 218]"],"m_defaultDifficulty":2,"m_description":"","m_difficulty":"","m_gameSpeed":4,"m_imageFilePath":"","m_isBlizzardMap":true,"m_mapFileName":"","m_miniSave":false,"m_playerList":[{"m_color":{"m_a":255,"m_b":30,"m_g":20,"m_r":180},"m_control":2,"m_handicap":100,"m_name":"narod","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":854244,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":255,"m_g":66,"m_r":0},"m_control":2,"m_handicap":100,"m_name":"arkx","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":708867,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":234,"m_g":167,"m_r":28},"m_control":2,"m_handicap":100,"m_name":"min","m_observe":0,"m_race":"Protoss","m_result":1,"m_teamId":0,"m_toon":{"m_id":387504,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":129,"m_g":0,"m_r":84},"m_control":2,"m_handicap":100,"m_name":"liekki","m_observe":0,"m_race":"Terran","m_result":1,"m_teamId":1,"m_toon":{"m_id":268326,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":41,"m_g":225,"m_r":235},"m_control":2,"m_handicap":100,"m_name":"Rev","m_observe":0,"m_race":"Terran","m_result":2,"m_teamId":1,"m_toon":{"m_id":230415,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":14,"m_g":138,"m_r":254},"m_control":2,"m_handicap":100,"m_name":"Embegee","m_observe":0,"m_race":"Zerg","m_result":2,"m_teamId":1,"m_toon":{"m_id":242426,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":0,"m_g":128,"m_r":22},"m_control":2,"m_handicap":100,"m_name":"Brutanic","m_observe":0,"m_race":"Protoss","m_result":2,"m_teamId":1,"m_toon":{"m_id":267813,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}},{"m_color":{"m_a":255,"m_b":252,"m_g":166,"m_r":204},"m_control":0,"m_handicap":0,"m_name":"Blitzkrieg","m_observe":0,"m_race":"Protoss","m_result":2,"m_teamId":0,"m_toon":{"m_id":373146,"m_programId":"[0, 0, 83, 50]","m_realm":1,"m_region":2}}],"m_thumbnail":{"m_file":"Minimap.tga"},"m_timeLocalOffset":129257649208634648,"m_timeUTC":129257541208634645,"m_title":"Toxic Slums"}', src/tests/details.rs:31


failures:
    tests::details::protocol15405::json_deserialize
    tests::details::protocol15405_II::json_deserialize

test result: FAILED. 3 passed; 2 failed; 0 ignored; 0 measured

